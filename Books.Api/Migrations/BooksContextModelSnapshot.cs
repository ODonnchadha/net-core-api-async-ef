// <auto-generated />
using System;
using Books.Api.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.Api.Migrations
{
    [DbContext(typeof(BooksContext))]
    partial class BooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.Api.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), FirstName = "Flann", LastName = "O'Brien" },
                        new { Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"), FirstName = "James", LastName = "Joyce" },
                        new { Id = new Guid("24810dfc-2d94-4cc7-aab5-cdf98b83f0c9"), FirstName = "G.K.", LastName = "Chesterton" },
                        new { Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), FirstName = "Bernard", LastName = "Shaw" }
                    );
                });

            modelBuilder.Entity("Books.Api.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"), AuthorId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), Description = "The Third Policeman has a fantastic plot of a murderous protagonist let loose on a strange world peopled by fat policemen, played against a satire of academic debate on an eccentric philosopher called De Selby. Sergeant Pluck introduces the atomic theory of the bicycle.", Title = "The Third Policeman" },
                        new { Id = new Guid("d8663e5e-7494-4f81-8739-6e0de1bea7ee"), AuthorId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), Description = "At Swim-Two-Birds works entirely with borrowed (and stolen) characters from other fiction and legend, on the grounds that there are already far too many existing fictional characters.", Title = "At Swim-Two-Birds" },
                        new { Id = new Guid("d173e20d-159e-4127-9ce9-b0ac2564ad97"), AuthorId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"), Description = "A Künstlerroman in a modernist style, this novel traces the religious and intellectual awakening of young Stephen Dedalus, a fictional alter ego of Joyce and an allusion to Daedalus, the consummate craftsman of Greek mythology.", Title = "A Portrait of the Artist as a Young Man" },
                        new { Id = new Guid("493c3228-3444-4a49-9cc0-e8532edc59b2"), AuthorId = new Guid("24810dfc-2d94-4cc7-aab5-cdf98b83f0c9"), Description = "The book is sometimes referred to as a metaphysical thriller. The work is prefixed with a poem written to Edmund Clerihew Bentley, revisiting the pair's early history and the challenges presented to their early faith by the times.", Title = "The Man Who Was Thursday" },
                        new { Id = new Guid("40ff5488-fdab-45b5-bc3a-14302d59869a"), AuthorId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), Description = "Misalliance is an ironic examination of the mating instincts of a varied group of people gathered at a wealthy man's country home on a summer weekend.", Title = "Misalliance" }
                    );
                });

            modelBuilder.Entity("Books.Api.Entities.Book", b =>
                {
                    b.HasOne("Books.Api.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
